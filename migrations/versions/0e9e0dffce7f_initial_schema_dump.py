"""Initial schema dump.

Revision ID: 0e9e0dffce7f
Revises:
Create Date: 2023-04-14 14:02:41.721251
"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "0e9e0dffce7f"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "denorm_balance_sheet_assets_ferc1",
        sa.Column(
            "report_year",
            sa.Integer(),
            nullable=False,
            comment="Four-digit year in which the data was reported.",
        ),
        sa.Column(
            "utility_id_ferc1",
            sa.Integer(),
            nullable=False,
            comment="PUDL-assigned utility ID, identifying a FERC1 utility. This is an auto-incremented ID and is not expected to be stable from year to year.",
        ),
        sa.Column(
            "utility_id_pudl",
            sa.Integer(),
            nullable=True,
            comment="A manually assigned PUDL utility ID. May not be stable over time.",
        ),
        sa.Column(
            "utility_name_ferc1",
            sa.Text(),
            nullable=True,
            comment="Name of the responding utility, as it is reported in FERC Form 1. For human readability only.",
        ),
        sa.Column(
            "record_id",
            sa.Text(),
            nullable=True,
            comment="Identifier indicating original FERC Form 1 source record. format: {table_name}_{report_year}_{report_prd}_{respondent_id}_{spplmnt_num}_{row_number}. Unique within FERC Form 1 DB tables which are not row-mapped.",
        ),
        sa.Column(
            "asset_type",
            sa.Text(),
            nullable=False,
            comment="Type of asset being reported to the balance_sheet_assets_ferc1 table.",
        ),
        sa.Column(
            "balance",
            sa.Text(),
            nullable=True,
            comment="Indication of whether a column is a credit or debit, as reported in the XBRL taxonomy.",
        ),
        sa.Column(
            "ending_balance",
            sa.Float(),
            nullable=True,
            comment="Account balance at end of year.",
        ),
        sa.Column(
            "ferc_account",
            sa.Text(),
            nullable=True,
            comment="Actual FERC Account number (e.g. '359.1') if available, or a PUDL assigned ID when FERC accounts have been split or combined in reporting.",
        ),
        sa.Column(
            "row_type_xbrl",
            sa.Enum("calculated_value", "reported_value"),
            nullable=True,
            comment="Indicates whether the value reported in the row is calculated, or uniquely reported within the table.",
        ),
        sa.Column(
            "starting_balance",
            sa.Float(),
            nullable=True,
            comment="Account balance at beginning of year.",
        ),
        sa.ForeignKeyConstraint(
            ["utility_id_ferc1"],
            ["utilities_ferc1.utility_id_ferc1"],
        ),
        sa.ForeignKeyConstraint(
            ["utility_id_pudl"],
            ["utilities_pudl.utility_id_pudl"],
        ),
        sa.PrimaryKeyConstraint("utility_id_ferc1", "report_year", "asset_type"),
    )
    op.create_table(
        "denorm_utilities_eia",
        sa.Column(
            "utility_id_eia",
            sa.Integer(),
            nullable=False,
            comment="The EIA Utility Identification number.",
        ),
        sa.Column(
            "utility_id_pudl",
            sa.Integer(),
            nullable=True,
            comment="A manually assigned PUDL utility ID. May not be stable over time.",
        ),
        sa.Column(
            "utility_name_eia",
            sa.Text(),
            nullable=True,
            comment="The name of the utility.",
        ),
        sa.Column("report_date", sa.Date(), nullable=False, comment="Date reported."),
        sa.Column("street_address", sa.Text(), nullable=True),
        sa.Column("city", sa.Text(), nullable=True),
        sa.Column(
            "state",
            sa.Text(),
            nullable=True,
            comment="Two letter US state abbreviation.",
        ),
        sa.Column(
            "zip_code", sa.Text(), nullable=True, comment="Five digit US Zip Code."
        ),
        sa.Column(
            "plants_reported_owner",
            sa.Boolean(),
            nullable=True,
            comment="Is the reporting entity an owner of power plants reported on Schedule 2 of the form?",
        ),
        sa.Column(
            "plants_reported_operator",
            sa.Boolean(),
            nullable=True,
            comment="Is the reporting entity an operator of power plants reported on Schedule 2 of the form?",
        ),
        sa.Column(
            "plants_reported_asset_manager",
            sa.Boolean(),
            nullable=True,
            comment="Is the reporting entity an asset manager of power plants reported on Schedule 2 of the form?",
        ),
        sa.Column(
            "plants_reported_other_relationship",
            sa.Boolean(),
            nullable=True,
            comment="Does the reporting entity have any other relationship to the power plants reported on Schedule 2 of the form?",
        ),
        sa.Column(
            "entity_type",
            sa.Text(),
            nullable=True,
            comment="Entity type of principal owner.",
        ),
        sa.Column("attention_line", sa.Text(), nullable=True),
        sa.Column("address_2", sa.Text(), nullable=True),
        sa.Column(
            "zip_code_4",
            sa.Text(),
            nullable=True,
            comment="Four digit US Zip Code suffix.",
        ),
        sa.Column(
            "contact_firstname",
            sa.Text(),
            nullable=True,
            comment="First name of utility contact 1.",
        ),
        sa.Column(
            "contact_lastname",
            sa.Text(),
            nullable=True,
            comment="Last name of utility contact 1.",
        ),
        sa.Column(
            "contact_title",
            sa.Text(),
            nullable=True,
            comment="Title of of utility contact 1.",
        ),
        sa.Column(
            "phone_number",
            sa.Text(),
            nullable=True,
            comment="Phone number for utility contact 1.",
        ),
        sa.Column(
            "phone_extension",
            sa.Text(),
            nullable=True,
            comment="Phone extension for utility contact 1",
        ),
        sa.Column(
            "contact_firstname_2",
            sa.Text(),
            nullable=True,
            comment="First name of utility contact 2.",
        ),
        sa.Column(
            "contact_lastname_2",
            sa.Text(),
            nullable=True,
            comment="Last name of utility contact 2.",
        ),
        sa.Column(
            "contact_title_2",
            sa.Text(),
            nullable=True,
            comment="Title of utility contact 2.",
        ),
        sa.Column(
            "phone_number_2",
            sa.Text(),
            nullable=True,
            comment="Phone number for utility contact 2.",
        ),
        sa.Column(
            "phone_extension_2",
            sa.Text(),
            nullable=True,
            comment="Phone extension for utility contact 2",
        ),
        sa.Column(
            "data_maturity",
            sa.Text(),
            nullable=True,
            comment="Level of maturity of the data record. Some data sources report less-than-final data. PUDL sometimes includes this data, but use at your own risk.",
        ),
        sa.ForeignKeyConstraint(
            ["data_maturity"],
            ["data_maturities.code"],
        ),
        sa.ForeignKeyConstraint(
            ["utility_id_eia", "report_date"],
            ["utilities_eia860.utility_id_eia", "utilities_eia860.report_date"],
        ),
        sa.ForeignKeyConstraint(
            ["utility_id_pudl"],
            ["utilities_pudl.utility_id_pudl"],
        ),
        sa.PrimaryKeyConstraint("utility_id_eia", "report_date"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("denorm_utilities_eia")
    op.drop_table("denorm_balance_sheet_assets_ferc1")
    # ### end Alembic commands ###
